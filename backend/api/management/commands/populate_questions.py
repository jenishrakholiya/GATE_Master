# File: backend/api/management/commands/populate_questions.py

import json
from django.core.management.base import BaseCommand
from django.db import transaction
from api.models import Question

# The main command class
class Command(BaseCommand):
    help = 'Populates the database with the full set of 220 sample GATE questions.'

    def handle(self, *args, **kwargs):
        self.stdout.write('Starting to populate the database with questions...')

        # Check if questions already exist to avoid duplication
        if Question.objects.exists():
            self.stdout.write(self.style.WARNING('Questions already exist in the database. Aborting population.'))
            self.stdout.write(self.style.NOTICE('To re-populate, first clear the Question table using the Django admin panel or by running `Question.objects.all().delete()` in the shell.'))
            return

        # --- Full Data Structure with 220 High-Quality Questions ---
        gate_questions = {
            'EM': [
                # MCQ Questions (1-8)
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Linear Algebra', 'text': r'The rank of the matrix $\begin{bmatrix} 1 & 2 & 3 \\ 2 & 4 & 6 \\ 3 & 6 & 9 \end{bmatrix}$ is', 'options': ['0', '1', '2', '3'], 'answer': 'B', 'explanation': 'All rows are linearly dependent (R2 = 2*R1, R3 = 3*R1), so the rank is 1.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Probability', 'text': r'If $P(A) = 0.6$, $P(B) = 0.4$, and $P(A \cap B) = 0.24$, then $P(A|B)$ is', 'options': ['0.4', '0.6', '0.24', '0.16'], 'answer': 'B', 'explanation': r'$P(A|B) = \frac{P(A \cap B)}{P(B)} = \frac{0.24}{0.4} = 0.6$'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Calculus', 'text': r'The derivative of $\sin(x^2)$ with respect to $x$ is', 'options': [r'$\cos(x^2)$', r'$2x \cdot \cos(x^2)$', r'$2x \cdot \sin(x^2)$', r'$\cos(2x)$'], 'answer': 'B', 'explanation': r'Using the chain rule: $\frac{d}{dx}[\sin(x^2)] = \cos(x^2) \cdot 2x$'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Discrete Math', 'text': 'The number of onto functions from a set of 4 elements to a set of 3 elements is', 'options': ['36', '64', '81', '24'], 'answer': 'A', 'explanation': r'Using the principle of inclusion-exclusion: $3^4 - \binom{3}{1}2^4 + \binom{3}{2}1^4 = 81 - 3 \times 16 + 3 \times 1 = 81 - 48 + 3 = 36$'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Graph Theory', 'text': 'A connected graph with $n$ vertices and $n$ edges must have', 'options': ['Exactly one cycle', 'At least one cycle', 'No cycles', 'Multiple cycles'], 'answer': 'B', 'explanation': 'A connected graph with $n$ vertices has a spanning tree with $n-1$ edges. Adding one more edge (to make $n$ edges) must create a cycle.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Set Theory', 'text': r'If $|A| = 5$, $|B| = 3$, and $|A \cap B| = 2$, then $|A \cup B|$ is', 'options': ['6', '8', '10', '15'], 'answer': 'A', 'explanation': r'$|A \cup B| = |A| + |B| - |A \cap B| = 5 + 3 - 2 = 6$'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Combinatorics', 'text': r'The coefficient of $x^5$ in the expansion of $(1+x)^{10}$ is', 'options': ['252', '210', '120', '1024'], 'answer': 'A', 'explanation': r'Using the binomial theorem, the coefficient is $\binom{10}{5} = \frac{10!}{5! \cdot 5!} = 252$'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Complex Numbers', 'text': r'The modulus of $\frac{3+4i}{1+i}$ is', 'options': ['5', '2.5', r'$\sqrt{2}$', r'$5/\sqrt{2}$'], 'answer': 'D', 'explanation': r'$|\frac{3+4i}{1+i}| = \frac{|3+4i|}{|1+i|} = \frac{\sqrt{3^2+4^2}}{\sqrt{1^2+1^2}} = \frac{5}{\sqrt{2}}$'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Linear Algebra', 'text': r'For a 3x3 matrix $A$, which statements are always true?', 'options': [r'$\det(A) = \det(A^T)$', r'$\det(2A) = 2 \cdot \det(A)$', r'$\det(A^{-1}) = 1/\det(A)$', r'rank($A$) $\le 3$'], 'answer': 'ACD', 'explanation': r'For a 3x3 matrix, $\det(kA) = k^3 \det(A)$. So, $\det(2A) = 8 \det(A)$. All other statements are standard properties.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Functions', 'text': r'Which of the following functions are onto (surjective) from $\mathbb{R}$ to $\mathbb{R}$?', 'options': [r'$f(x) = x^3$', r'$f(x) = x^2$', r'$f(x) = \sin(x)$', r'$f(x) = e^x$'], 'answer': 'A', 'explanation': r'Only $f(x)=x^3$ covers all real numbers in its range. The range of $x^2$ is $[0, \infty)$, $\sin(x)$ is $[-1, 1]$, and $e^x$ is $(0, \infty)$.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Probability', 'text': 'For independent events A and B, which of the following are correct?', 'options': [r'$P(A \cap B) = P(A) \cdot P(B)$', r'$P(A|B) = P(A)$', r'$P(A \cup B) = P(A) + P(B)$', r'$P(A^c|B) = P(A^c)$'], 'answer': 'ABD', 'explanation': r'For independent events, $P(A \cup B) = P(A) + P(B) - P(A \cap B) = P(A) + P(B) - P(A)P(B)$. Options A, B, and D are direct definitions or consequences of independence.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Graph Theory', 'text': 'A complete graph $K_5$ has which of the following properties?', 'options': ['10 edges', '5 vertices', 'It is Hamiltonian', 'It is Planar'], 'answer': 'ABC', 'explanation': r'$K_5$ has 5 vertices and $\binom{5}{2}=10$ edges. Every complete graph with $n \ge 3$ vertices is Hamiltonian. $K_5$ is the classic example of a non-planar graph.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Logic', 'text': 'Which of the following logical equivalences are correct?', 'options': [r'$\neg(p \land q) \equiv \neg p \lor \neg q$', r'$\neg(p \lor q) \equiv \neg p \land \neg q$', r'$p \rightarrow q \equiv \neg p \lor q$', r'$p \oplus q \equiv (p \land \neg q) \lor (\neg p \land q)$'], 'answer': 'ABCD', 'explanation': "All are standard logical equivalences. A and B are De Morgan's laws, C is the definition of implication, and D is the definition of XOR."},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Number Theory', 'text': 'Which of the following numbers are prime?', 'options': ['97', '91', '89', '87'], 'answer': 'AC', 'explanation': '97 and 89 are prime numbers. 91 is divisible by 7 and 13 (91 = 7 x 13), and 87 is divisible by 3 (87 = 3 x 29).'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Integration', 'text': r'The value of $\int_{0}^{\pi} \sin^2(x) dx$ is (rounded to two decimal places)', 'answer': '1.57', 'explanation': r'The integral evaluates to $\frac{\pi}{2}$, which is approximately 3.14159 / 2 = 1.5708.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Matrices', 'text': r'The trace of the matrix $\begin{bmatrix} 1 & 2 & 3 \\ 0 & 4 & 5 \\ 0 & 0 & 6 \end{bmatrix}$ is', 'answer': '11', 'explanation': 'The trace is the sum of the diagonal elements: 1 + 4 + 6 = 11.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Combinatorics', 'text': 'The number of distinct ways to arrange the letters of the word COMPUTER is', 'answer': '40320', 'explanation': 'The word COMPUTER has 8 distinct letters, so the number of arrangements is 8! = 40320.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Probability', 'text': 'The expected value of the sum of outcomes when two fair six-sided dice are rolled is', 'answer': '7', 'explanation': r'Let X and Y be the outcomes of the two dice. $E[X+Y] = E[X] + E[Y] = 3.5 + 3.5 = 7$.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Determinant', 'text': r'The determinant of the matrix $\begin{bmatrix} 2 & 1 \\ 4 & 3 \end{bmatrix}$ is', 'answer': '2', 'explanation': 'The determinant is (2 * 3) - (1 * 4) = 6 - 4 = 2.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Series', 'text': 'The sum of the first 10 terms of the geometric progression 2, 6, 18, ... is', 'answer': '59048', 'explanation': r'This is a GP with first term $a=2$ and common ratio $r=3$. The sum is $S_{10} = \frac{a(r^{10}-1)}{r-1} = \frac{2(3^{10}-1)}{3-1} = 3^{10}-1 = 59049 - 1 = 59048.'}
            ],
            'DL': [
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Boolean Algebra', 'text': r'The simplified form of the Boolean expression $AB + A\'B + AB\'$ is', 'options': [r'$A + B$', r'$AB$', r'$A\' + B\'$', r'$A \oplus B$'], 'answer': 'A', 'explanation': r'$AB + A\'B + AB\' = B(A+A\') + AB\' = B(1) + AB\' = B + AB\' = A+B$ (by absorption law).'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Number Systems', 'text': r'The 2\'s complement of the 6-bit binary number $101101_2$ is', 'options': ['010010', '010011', '101110', '010001'], 'answer': 'B', 'explanation': r'First, find the 1\'s complement by inverting all bits: $010010_2$. Then, add 1: $010010_2 + 1 = 010011_2$.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Logic Gates', 'text': 'Which of the following logic gates is considered a universal gate?', 'options': ['AND', 'OR', 'NAND', 'XOR'], 'answer': 'C', 'explanation': 'NAND and NOR gates are universal gates because any other logic function can be implemented using only them.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'K-Maps', 'text': r'The minimized SOP expression for $f(A,B,C,D) = \Sigma m(0,1,4,5,8,9,12,13)$ has how many literals?', 'options': ['2', '3', '4', '1'], 'answer': 'D', 'explanation': r'Using a K-Map, the minterms form a group of 8, covering two columns. This large group simplifies to just $D\'$. This expression has only 1 literal.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Flip Flops', 'text': 'In a JK flip-flop, when J=1 and K=0, the output Q becomes', 'options': ['Same as previous state', '0 (Reset)', '1 (Set)', 'Toggles'], 'answer': 'C', 'explanation': 'The input condition J=1, K=0 is the "Set" state for a JK flip-flop, which makes the output Q=1.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Combinational Circuits', 'text': 'A 4-to-1 multiplexer has how many select lines?', 'options': ['1', '2', '3', '4'], 'answer': 'B', 'explanation': r'A multiplexer with $2^n$ inputs requires $n$ select lines. For 4 inputs, $2^2=4$, so 2 select lines are needed.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Sequential Circuits', 'text': 'To build a MOD-10 (decade) counter, the minimum number of flip-flops required is', 'options': ['2', '3', '4', '5'], 'answer': 'C', 'explanation': r'To count up to N states, we need $n$ flip-flops such that $2^n \ge N$. For a MOD-10 counter (10 states), $2^3=8 < 10$ and $2^4=16 \ge 10$. So, 4 flip-flops are needed.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Decoders', 'text': 'A 3-to-8 decoder, with an enable input, can be used as a', 'options': ['4-to-16 decoder', '2-to-4 decoder', '1-to-8 demultiplexer', '8-to-3 encoder'], 'answer': 'C', 'explanation': 'A decoder with an enable input can act as a demultiplexer. The enable input serves as the data input line, and the selection inputs (A,B,C) choose the output line.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Boolean Laws', 'text': 'Which of the following Boolean laws are correct?', 'options': [r'$A + AB = A$', r'$A(A + B) = A$', r'$A + A\'B = A + B$', r'$A(A\' + B) = AB$'], 'answer': 'ABCD', 'explanation': 'All are standard absorption and distributive laws in Boolean algebra.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Logic Gates', 'text': 'Which of these logic gates produce an output of 1 when both inputs are 0?', 'options': ['NOR', 'NAND', 'XOR', 'XNOR'], 'answer': 'ABD', 'explanation': 'NOR(0,0)=1, NAND(0,0)=1, XNOR(0,0)=1. However, XOR(0,0)=0.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Flip Flops', 'text': 'Which of these flip-flop types have a toggle state?', 'options': ['SR', 'JK', 'D', 'T'], 'answer': 'BD', 'explanation': 'The JK flip-flop toggles when J=K=1. The T (Toggle) flip-flop is specifically designed to toggle its state when T=1.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Number Systems', 'text': 'Which of the following representations are equivalent to the decimal number 15?', 'options': [r'$1111_2$', r'$F_{16}$', r'$17_8$', r'$33_4$'], 'answer': 'ABCD', 'explanation': r'$1111_2 = 15$, $F_{16} = 15$, $17_8 = 1 \cdot 8 + 7 = 15$, $33_4 = 3 \cdot 4 + 3 = 15$. All are correct.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Combinational Logic', 'text': 'Which of the following are combinational logic circuits?', 'options': ['Adder', 'Multiplexer', 'Counter', 'Decoder'], 'answer': 'ABD', 'explanation': 'Adders, Multiplexers, and Decoders are combinational circuits whose outputs depend only on the current inputs. A Counter is a sequential circuit as its output depends on the previous state.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Minimization', 'text': 'Which of the following are valid methods for minimizing Boolean functions?', 'options': ['Karnaugh Map (K-map)', 'Quine-McCluskey method', 'Using the consensus theorem', 'Using Boolean algebra axioms'], 'answer': 'ABCD', 'explanation': 'All listed options are standard and valid techniques for Boolean function minimization.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Gray Code', 'text': 'The Gray code equivalent of the binary number 1011 is', 'answer': '1110', 'explanation': 'Keep the MSB (1). Then XOR adjacent bits: 1⊕0=1, 0⊕1=1, 1⊕1=0. The result is 1110.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Logic Gates', 'text': 'What is the minimum number of 2-input NAND gates required to implement an XOR gate?', 'answer': '4', 'explanation': 'An XOR gate can be implemented with four 2-input NAND gates.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Counters', 'text': 'A 4-bit synchronous binary up-counter counts from 0 to what maximum decimal value?', 'answer': '15', 'explanation': r'A 4-bit counter has $2^4=16$ states, which are typically from 0000 to 1111 in binary. The maximum value is $1111_2$, which is 15 in decimal.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Multiplexer', 'text': 'How many select lines are required for a 16-to-1 multiplexer?', 'answer': '4', 'explanation': r'To select one of 16 inputs, we need $n$ select lines such that $2^n=16$. Thus, $n=4$.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Boolean Function', 'text': r'The number of minterms in the Boolean function $f(A,B,C) = AB + BC$ is', 'answer': '3', 'explanation': r'The function is $f = AB(C+C\') + (A+A\')BC = ABC + ABC\' + A\'BC$. The distinct minterms are $A\'BC$ (m3), $ABC\'$ (m6), and $ABC$ (m7). There are 3 minterms.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Sequential Logic', 'text': 'For a flip-flop, if the setup time is 2 ns, the data input must be stable for at least how many nanoseconds before the active clock edge arrives?', 'answer': '2', 'explanation': 'The setup time is, by definition, the minimum time the data input must be held stable before the clock edge for it to be reliably sampled.'}
            ],
            'COA': [
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Pipelining', 'text': 'In a 5-stage pipeline, what is the effective CPI if 20% of instructions are conditional branches, and each taken branch incurs a 3-cycle stall penalty?', 'options': ['1.6', '1.4', '2.0', '1.8'], 'answer': 'A', 'explanation': 'Ideal CPI = 1. Penalty CPI = 1 + (branch frequency × penalty cycles) = 1 + (0.20 × 3) = 1 + 0.6 = 1.6.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Cache Memory', 'text': 'Which cache mapping technique allows a memory block to be placed in any available cache line?', 'options': ['Direct mapping', 'Fully associative mapping', 'Set-associative mapping', 'Segmented mapping'], 'answer': 'B', 'explanation': 'Fully associative mapping provides the most flexibility, allowing any main memory block to be placed in any cache line.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Memory Hierarchy', 'text': 'A system has a cache hit time of 1 ns and a main memory access time of 101 ns. If the hit rate is 95%, what is the average memory access time (AMAT)?', 'options': ['6 ns', '5.95 ns', '5 ns', '4.95 ns'], 'answer': 'A', 'explanation': 'AMAT = (Hit Rate × Hit Time) + (Miss Rate × Miss Time) = (0.95 × 1) + (0.05 × 101) = 0.95 + 5.05 = 6 ns.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Instruction Set', 'text': 'Which addressing mode is represented by the instruction `MOV R1, 100(R2)`?', 'options': ['Direct', 'Indirect', 'Indexed', 'Register'], 'answer': 'C', 'explanation': 'This is indexed (or base-plus-displacement) addressing. The effective address is calculated by adding the contents of register R2 to the constant offset 100.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'CPU Design', 'text': 'In a Von Neumann architecture, where are instructions and data stored?', 'options': ['In separate memories', 'In the same memory', 'In the cache only', 'In registers only'], 'answer': 'B', 'explanation': 'The key feature of the Von Neumann architecture is the use of a single memory space for both instructions and data.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Hazards', 'text': 'Data forwarding (or bypassing) is a hardware technique used primarily to resolve which type of pipeline hazard?', 'options': ['Structural hazard', 'Control hazard', 'Data hazard (RAW)', 'Memory hazard'], 'answer': 'C', 'explanation': 'Forwarding resolves Read-After-Write (RAW) data hazards by providing the result from an earlier pipeline stage directly to a later stage that needs it, without waiting for it to be written back to the register file.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Virtual Memory', 'text': "Which page replacement algorithm is known to suffer from Belady's Anomaly?", 'options': ['LRU (Least Recently Used)', 'FIFO (First-In, First-Out)', 'Optimal', 'LFU (Least Frequently Used)'], 'answer': 'B', 'explanation': "Belady's Anomaly is a phenomenon where increasing the number of page frames results in an increase in the number of page faults. FIFO is the classic example of an algorithm that exhibits this behavior."},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'I/O Systems', 'text': 'Which I/O data transfer method allows the I/O device to transfer data directly to or from main memory without CPU intervention?', 'options': ['Programmed I/O', 'Interrupt-driven I/O', 'DMA (Direct Memory Access)', 'Polling'], 'answer': 'C', 'explanation': 'DMA allows a dedicated controller to manage data transfers between I/O devices and memory, freeing up the CPU for other tasks.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Cache Design', 'text': 'Which of the following factors affect cache performance?', 'options': ['Block size', 'Associativity', 'Cache size', 'Replacement policy'], 'answer': 'ABCD', 'explanation': 'All of these factors significantly impact the cache hit rate and access time, thereby affecting overall cache performance.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Pipeline Stages', 'text': 'A standard 5-stage RISC pipeline typically includes which of the following stages?', 'options': ['Instruction Fetch (IF)', 'Instruction Decode (ID)', 'Execute (EX)', 'Write Back (WB)'], 'answer': 'ABCD', 'explanation': 'The classic 5-stage RISC pipeline consists of IF, ID, EX, MEM (Memory Access), and WB.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Memory Management', 'text': 'Which of the following are valid page replacement algorithms?', 'options': ['FIFO', 'LRU', 'Second Chance (Clock)', 'Most Recently Used (MRU)'], 'answer': 'ABCD', 'explanation': 'All of the listed options are legitimate page replacement strategies, each with different performance characteristics and use cases.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Instruction Types', 'text': 'Characteristics of a RISC (Reduced Instruction Set Computer) architecture typically include:', 'options': ['Fixed instruction length', 'Load-store architecture', 'Simple addressing modes', 'Many complex instructions'], 'answer': 'ABC', 'explanation': 'RISC architectures emphasize simplicity: fixed-length instructions, operations on registers only (load-store), and simple addressing modes. Complex instructions are a feature of CISC (Complex Instruction Set Computer) architectures.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Bus Systems', 'text': 'Which of these are fundamental types of buses found in a typical computer system?', 'options': ['Address bus', 'Data bus', 'Control bus', 'Network bus'], 'answer': 'ABC', 'explanation': 'The system bus is composed of the address bus (for memory locations), data bus (for data transfer), and control bus (for commands and status signals). A network bus is not a fundamental internal component.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Superscalar', 'text': 'A superscalar processor achieves performance improvements through which of the following techniques?', 'options': ['Multiple instruction issue per cycle', 'Out-of-order execution', 'Branch prediction', 'Register renaming'], 'answer': 'ABCD', 'explanation': 'All of these are key techniques used in modern superscalar processors to exploit Instruction-Level Parallelism (ILP) and improve performance.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Cache Calculation', 'text': 'Consider a direct-mapped cache with 16 blocks and a block size of 8 bytes. For a 32-bit physical address, how many bits are used for the tag?', 'answer': '25', 'explanation': r'Block offset bits = $\log_2(8) = 3$. Number of cache blocks = 16. Index bits = $\log_2(16) = 4$. Tag bits = Total bits - Index bits - Offset bits = 32 - 4 - 3 = 25 bits.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Pipeline Throughput', 'text': 'A 4-stage instruction pipeline executes 100 instructions. Assuming no stalls or hazards, how many clock cycles are needed to complete execution?', 'answer': '103', 'explanation': 'The first instruction takes 4 cycles to complete. After that, one instruction completes every cycle. Total cycles = 4 + (100 - 1) = 103 cycles.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Virtual Memory', 'text': r'In a virtual memory system, the page size is 4 KB and the virtual address is 32 bits long. If a page table entry is 4 bytes, what is the size of the page table for a single process in MB?', 'answer': '4', 'explanation': r'Page offset bits = $\log_2(4 \text{ KB}) = \log_2(2^{12}) = 12$. Number of virtual pages = $2^{(32-12)} = 2^{20}$. Page table size = (Number of pages) * (Entry size) = $2^{20} \times 4$ bytes = 4 MB.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Instruction Encoding', 'text': 'A CPU has 16 registers and 64 distinct opcodes. What is the minimum number of bits needed to encode an R-type instruction with format (opcode, rs, rt, rd)?', 'answer': '18', 'explanation': r'Opcode bits = $\lceil \log_2(64) \rceil = 6$. Register bits = $\lceil \log_2(16) \rceil = 4$. Total bits = 6 (opcode) + 4 (rs) + 4 (rt) + 4 (rd) = 18 bits.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Memory Addressing', 'text': 'For a byte-addressable memory system with a 16-bit address bus, what is the maximum memory size in KB?', 'answer': '64', 'explanation': r'With a 16-bit address, we can address $2^{16}$ unique locations. Since it is byte-addressable, this is $2^{16}$ bytes = 65536 bytes. 1 KB = 1024 bytes ($2^{10}$), so the size is $65536 / 1024 = 64$ KB.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Branch Prediction', 'text': r'A processor has a branch penalty of 2 cycles. 25% of instructions are branches. Without prediction, what is the CPI increase due to branches?', 'answer': '0.5', 'explanation': 'The base CPI is 1. The penalty is added for each branch. CPI increase = Branch frequency × Branch penalty = 0.25 × 2 = 0.5. The new CPI would be 1.5.'}
            ],
            'PROG': [ # Corrected from PDS
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Arrays', 'text': 'The time complexity to access an element in an array by its index is', 'options': [r'$O(1)$', r'$O(n)$', r'$O(\log n)$', r'$O(n^2)$'], 'answer': 'A', 'explanation': 'Array elements can be accessed directly using their index, which is a constant time operation, O(1).'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Linked Lists', 'text': 'Which of the following operations is the least efficient in a singly linked list (given only the head pointer)?', 'options': ['Inserting a new node at the beginning', 'Deleting the first node', 'Accessing the k-th element', 'Checking if the list is empty'], 'answer': 'C', 'explanation': r'Accessing the k-th element requires traversing the list from the head, taking $O(k)$ time. All other listed operations are $O(1)$.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Trees', 'text': r'In a non-empty complete binary tree with $n$ nodes, the number of leaf nodes is', 'options': [r'$\lfloor n/2 \rfloor$', r'$\lceil n/2 \rceil$', r'$n/2 + 1$', 'Cannot be determined'], 'answer': 'B', 'explanation': r'For any non-empty complete binary tree with n nodes, the number of leaf nodes is $\lceil n/2 \rceil$.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Stacks', 'text': 'The postfix (Reverse Polish Notation) expression for the infix expression (A + B) * (C - D) is', 'options': ['AB+CD-*', 'A+B*C-D', 'AB+*CD-', 'ABCD+-*'], 'answer': 'A', 'explanation': 'First, convert the expressions in parentheses: (A+B) becomes AB+ and (C-D) becomes CD-. Then apply the multiplication: AB+ CD- *.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Queues', 'text': 'A queue data structure operates in which manner?', 'options': ['LIFO (Last-In, First-Out)', 'FIFO (First-In, First-Out)', 'LILO (Last-In, Last-Out)', 'Random'], 'answer': 'B', 'explanation': 'A queue is a FIFO (First-In, First-Out) structure, where the first element added is the first one to be removed.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Binary Search Trees', 'text': 'A Binary Search Tree is built with the keys 50, 30, 20, 40, 70, 60, 80. What is its in-order traversal?', 'options': ['20, 30, 40, 50, 60, 70, 80', '50, 30, 70, 20, 40, 60, 80', '20, 40, 30, 60, 80, 70, 50', 'Cannot be determined from the keys alone'], 'answer': 'A', 'explanation': 'The in-order traversal of a Binary Search Tree always yields the elements in sorted (ascending) order.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Hashing', 'text': r'In hashing, a collision occurs when', 'options': ['Two different keys produce the same hash value', 'The hash table is full', 'A key is not found', 'The hash function is an even number'], 'answer': 'A', 'explanation': 'A collision is the event where a hash function maps two distinct keys to the same bucket or slot in the hash table.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Recursion', 'text': r'The time complexity of the Tower of Hanoi problem with $n$ disks is', 'options': [r'$O(n)$', r'$O(n^2)$', r'$O(2^n)$', r'$O(n!)$'], 'answer': 'C', 'explanation': r'The recurrence relation is $T(n) = 2T(n-1) + 1$, which solves to $O(2^n)$.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Tree Traversals', 'text': 'Which pairs of tree traversals are sufficient to uniquely construct a binary tree?', 'options': ['Pre-order and In-order', 'Post-order and In-order', 'Pre-order and Post-order', 'Level-order and In-order'], 'answer': 'ABD', 'explanation': 'A unique binary tree can be constructed if In-order traversal is given along with either Pre-order, Post-order, or Level-order. Pre-order and Post-order together are not sufficient.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Data Structure Properties', 'text': 'Which of the following data structures operate on the LIFO (Last-In, First-Out) principle?', 'options': ['Stack', 'Queue', 'Function call stack in recursion', 'Max-Heap'], 'answer': 'AC', 'explanation': 'A Stack is explicitly a LIFO structure. The mechanism that manages function calls and recursion also uses a stack and thus follows the LIFO principle. Queues are FIFO (First-In, First-Out) and Heaps are priority-based.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Graph Representations', 'text': 'Advantages of an adjacency list representation of a graph over an adjacency matrix representation include:', 'options': ['More space-efficient for sparse graphs', 'Faster to iterate over all neighbors of a vertex', 'Faster to check if an edge (u, v) exists', 'Better for dense graphs'], 'answer': 'AB', 'explanation': r'Adjacency lists use $O(V+E)$ space, which is better than $O(V^2)$ for sparse graphs. Iterating neighbors is efficient. Adjacency matrices are faster for checking a specific edge and are better for dense graphs.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Heap Properties', 'text': 'Which of the following are properties of a Max-Heap?', 'options': [r'The value of a parent node is greater than or equal to its children', 'It is a complete binary tree', 'The root contains the maximum element', 'In-order traversal yields a sorted sequence'], 'answer': 'ABC', 'explanation': 'A Max-Heap satisfies the heap property (parent >= children), is structurally a complete binary tree, and consequently has the max element at the root. In-order traversal does not produce a sorted sequence.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Sorting Algorithms', 'text': 'Which of the following sorting algorithms are stable?', 'options': ['Bubble Sort', 'Selection Sort', 'Insertion Sort', 'Merge Sort'], 'answer': 'ACD', 'explanation': 'A stable sort maintains the relative order of equal elements. Bubble Sort, Insertion Sort, and Merge Sort are stable. Selection Sort is not stable.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'String Algorithms', 'text': 'Which of the following string matching algorithms have a linear time worst-case complexity?', 'options': ['Knuth-Morris-Pratt (KMP)', 'Rabin-Karp', 'Boyer-Moore', 'Naive Algorithm'], 'answer': 'A', 'explanation': r'KMP has a worst-case complexity of $O(n+m)$. Rabin-Karp and Boyer-Moore have linear average-case time but can be worse in the worst case. The Naive algorithm is $O(nm)$.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Binary Trees', 'text': 'What is the maximum number of nodes at level 4 in a binary tree (assuming the root is at level 0)?', 'answer': '16', 'explanation': r'The maximum number of nodes at level $k$ is $2^k$. For level 4, this is $2^4 = 16$.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Array Operations', 'text': r'What is the minimum number of comparisons needed in the worst case to find the minimum element in an array of 10 distinct elements?', 'answer': '9', 'explanation': 'To find the minimum in an array of size n, you need to perform n-1 comparisons in the worst case.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Hash Table', 'text': r'A hash table of size 11 uses the hash function $h(x) = x \pmod{11}$. With linear probing, how many collisions occur when inserting the keys 22, 33, 44, 55?', 'answer': '3', 'explanation': 'h(22)=0. h(33)=0 (1st collision). h(44)=0 (2nd collision). h(55)=0 (3rd collision). All keys hash to the same slot, causing 3 collisions.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Stack Operations', 'text': 'A stack performs the following sequence of operations: PUSH(1), PUSH(2), POP, PUSH(3), POP, POP. How many elements remain on the stack?', 'answer': '0', 'explanation': 'State trace: [] -> [1] -> [1,2] -> [1] -> [1,3] -> [1] -> []. The final stack is empty.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Linked List', 'text': r'In a singly linked list with 20 nodes, how many node traversals are required to reach the node before the 15th node?', 'answer': '13', 'explanation': 'To reach the node *before* the 15th node, you must reach the 14th node. Starting from the head (node 1), this requires 13 traversals (from 1->2, 2->3, ..., 13->14).'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'AVL Trees', 'text': 'What is the minimum number of nodes in an AVL tree of height 4 (where height of a single node is 0)?', 'answer': '12', 'explanation': r'Let N(h) be the min nodes for height h. N(0)=1, N(1)=2. N(h) = N(h-1) + N(h-2) + 1. N(2)=4, N(3)=7, N(4)=12.'}
            ],
            'ALGO': [
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Sorting', 'text': 'Which sorting algorithm has a best-case time complexity of $O(n)$?', 'options': ['Quick Sort', 'Merge Sort', 'Insertion Sort', 'Heap Sort'], 'answer': 'C', 'explanation': r'Insertion Sort exhibits a best-case time complexity of $O(n)$ when the input array is already sorted. The best case for Quick Sort is $O(n \log n)$. Merge Sort and Heap Sort are always $O(n \log n)$.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Asymptotic Analysis', 'text': r'Let $f(n) = n$ and $g(n) = n^2$. Which of the following asymptotic relations is TRUE?', 'options': [r'$f(n) = \Theta(g(n))$', r'$f(n) = \Omega(g(n))$', r'$f(n) = O(g(n))$', r'$g(n) = O(f(n))$'], 'answer': 'C', 'explanation': r'$f(n) = O(g(n))$ because $n \le c \cdot n^2$ for some constant $c>0$ and for all $n \ge n_0$. $n$ grows slower than $n^2$.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Divide and Conquer', 'text': 'The worst-case time complexity of Quick Sort occurs when the pivot element is chosen to be', 'options': ['The middle element', 'A random element', 'Always the smallest or largest element', 'The median of three'], 'answer': 'C', 'explanation': r'The worst case for Quick Sort is $O(n^2)$, which happens when the partitioning is unbalanced. This occurs if the pivot is consistently the smallest or largest element, leading to one partition of size 0 and another of size n-1.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Greedy Algorithms', 'text': "Which algorithm finds the single-source shortest paths on a weighted, directed graph, assuming all edge weights are non-negative?", 'options': ['Bellman-Ford', 'Floyd-Warshall', "Dijkstra's Algorithm", 'Topological Sort'], 'answer': 'C', 'explanation': "Dijkstra's algorithm uses a greedy approach to find the shortest paths from a single source, but requires non-negative edge weights. Bellman-Ford can handle negative weights, and Floyd-Warshall finds all-pairs shortest paths."},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Graph Algorithms', 'text': r'The time complexity of Depth First Search (DFS) on a graph represented by an adjacency list is', 'options': [r'$O(V)$', r'$O(E)$', r'$O(V + E)$', r'$O(V \cdot E)$'], 'answer': 'C', 'explanation': r'DFS visits each vertex once and traverses each edge once (in a directed graph) or twice (in an undirected graph). Therefore, its complexity is $O(V+E)$, where V is the number of vertices and E is the number of edges.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Dynamic Programming', 'text': 'The optimal substructure property is a required characteristic for problems solvable by', 'options': ['Greedy algorithms only', 'Dynamic programming only', 'Both Greedy algorithms and Dynamic Programming', 'Divide and Conquer algorithms only'], 'answer': 'C', 'explanation': 'Both Greedy and Dynamic Programming paradigms rely on the optimal substructure property, which means that an optimal solution to a problem contains within it optimal solutions to subproblems.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Hashing', 'text': 'Which hashing technique provides the best protection against worst-case performance from an adversary who knows the hash function?', 'options': ['Division method', 'Multiplication method', 'Universal hashing', 'Linear probing'], 'answer': 'C', 'explanation': 'Universal hashing involves selecting a hash function at random from a carefully designed class of functions, making it impossible for an adversary to choose a set of keys that are guaranteed to collide.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Searching', 'text': 'Binary search is an efficient algorithm for searching in a', 'options': ['Sorted array', 'Singly linked list', 'Unsorted array', 'Binary heap'], 'answer': 'A', 'explanation': 'Binary search relies on the property of the data being sorted to eliminate half of the remaining search space in each step.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Complexity Classes', 'text': 'Which of the following problems are known to be in the complexity class P?', 'options': ['Sorting n numbers', 'Matrix multiplication of two n x n matrices', 'Traveling Salesperson Problem (TSP)', 'Hamiltonian Path Problem'], 'answer': 'AB', 'explanation': 'Class P contains problems solvable in polynomial time. Sorting (e.g., Merge Sort in $O(n \log n)$) and standard matrix multiplication ($O(n^3)$) are in P. TSP and Hamiltonian Path are classic NP-complete problems.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Algorithm Paradigms', 'text': 'Which of the following algorithms use a "divide and conquer" strategy?', 'options': ['Merge Sort', 'Quick Sort', 'Binary Search', 'Dijkstra\'s Algorithm'], 'answer': 'ABC', 'explanation': 'Merge Sort, Quick Sort, and Binary Search all work by recursively breaking down a problem into two or more sub-problems of the same or related type, until these become simple enough to be solved directly. Dijkstra\'s is a greedy algorithm.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Graph Properties', 'text': "For Minimum Spanning Tree (MST) algorithms like Kruskal's and Prim's, which statements are correct?", 'options': ['They rely on a greedy strategy', 'The MST is unique if all edge weights are distinct', 'The Cut Property is a fundamental principle used to prove their correctness', 'They work correctly with negative edge weights'], 'answer': 'ABCD', 'explanation': 'Both algorithms are greedy. A unique MST is guaranteed for distinct edge weights. The cut property is key to their correctness. Unlike some shortest path algorithms, MST algorithms handle negative edge weights correctly.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Recurrence Relations', 'text': r'Which of the following methods can be used to solve the recurrence relation $T(n) = 2T(n/2) + n$?', 'options': ['Master Theorem', 'Recursion Tree Method', 'Substitution Method', 'Iterative Method'], 'answer': 'ABCD', 'explanation': 'All of these are standard techniques for solving recurrence relations. The Master Theorem provides a direct solution for this form, and the other methods can also be used to derive the solution, which is $O(n \log n)$.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Data Structure Operations', 'text': r'Which of the following operations on a min-heap of size $n$ can be performed in $O(\log n)$ time?', 'options': ['extract-min', 'insert', 'decrease-key', 'find-max'], 'answer': 'ABC', 'explanation': 'Extracting the minimum, inserting a new element, and decreasing a key all require traversing the height of the heap, which is $O(\log n)$. Finding the maximum element requires checking all leaf nodes, which takes $O(n)$ time.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'String Algorithms', 'text': r'Which of the following are properties of the Knuth-Morris-Pratt (KMP) string matching algorithm?', 'options': ['Its worst-case time complexity is $O(n+m)$', 'It uses a precomputed longest proper prefix suffix (LPS) array', 'It never re-compares a text character that has already been matched', 'It is an example of a greedy algorithm'], 'answer': 'ABC', 'explanation': 'KMP achieves linear time complexity by using an LPS (or failure function) array to avoid redundant comparisons of text characters. It is not classified as a greedy algorithm.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Asymptotic Growth', 'text': r'Consider the functions: $10$, $\sqrt{n}$, $n$, $\log_2 n$, $100/n$. When arranged in increasing order of asymptotic growth for large $n$, what is the position of $n$ (1-based index)?', 'answer': '5', 'explanation': r'The correct increasing order of growth is: $100/n, 10, \log_2 n, \sqrt{n}, n$. In this sequence, $n$ is the 5th term.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Dynamic Programming', 'text': r'For a 0/1 Knapsack problem, the capacity of the knapsack is 5. There are 3 items with weight-value pairs as (2, 60), (3, 100), (4, 120). The maximum possible value is', 'answer': '160', 'explanation': 'We can either take item 1 and item 2 (weight 2+3=5, value 60+100=160), or other combinations. Taking item 3 (weight 4) leaves space for nothing else (value 120). Taking item 2 (weight 3) leaves space for nothing else (value 100). The optimal choice is items 1 and 2 for a total value of 160.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Recurrence Solution', 'text': r'Using the Master Theorem, what is the time complexity for the recurrence $T(n) = 3T(n/2) + n^2$?', 'answer': 'O(n^2)', 'explanation': r'Using the Master Theorem, $a=3, b=2, f(n)=n^2$. We compare $n^{\log_b a} = n^{\log_2 3} \approx n^{1.58}$ with $f(n)=n^2$. Since $f(n)$ is polynomially larger (Case 3 applies), the complexity is $\Theta(f(n)) = \Theta(n^2)$.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Graph Algorithms', 'text': "Using Cayley's formula, the number of spanning trees in a complete graph $K_5$ is", 'answer': '125', 'explanation': r"Cayley's formula states that the number of spanning trees in a complete graph $K_n$ is $n^{n-2}$. For $K_5$, this is $5^{5-2} = 5^3 = 125$."},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Sorting Analysis', 'text': r'What is the exact number of comparisons required by Merge Sort to sort an array of 8 elements in the worst case?', 'answer': '17', 'explanation': r'The recurrence is $C(n) = 2C(n/2) + n-1$. $C(8) = 2C(4)+7 = 2(2C(2)+3)+7 = 2(2(2C(1)+1)+3)+7 = 2(2(1)+3)+7 = 2(5)+7=17$.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Dynamic Programming', 'text': r'What is the length of the Longest Common Subsequence (LCS) of the strings "AGGTAB" and "GXTXAYB"?', 'answer': '4', 'explanation': 'Using a dynamic programming table, we can find that the longest common subsequence is "GTAB". Its length is 4.'}
            ],
            'TOC': [
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Regular Languages', 'text': r'Which of the following languages is NOT regular?', 'options': [r'$L = \{a^n b^m \mid n, m \ge 0\}$', r'$L = \{a^n b^n \mid n \ge 0\}$', r'$L = \{(ab)^n \mid n \ge 0\}$', r'$L = \{ w \in \{a,b\}^* \mid w \text{ has an even number of } a\text{\'s}\}$'], 'answer': 'B', 'explanation': r'The language $L = \{a^n b^n \mid n \ge 0\}$ is a canonical example of a context-free language that is not regular. It requires a memory (stack) to count the number of a\'s, which a finite automaton cannot do.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Finite Automata', 'text': r'What is the minimum number of states required in a DFA to accept the set of all strings over $\{0, 1\}$ that end with "01"?', 'options': ['2', '3', '4', '5'], 'answer': 'B', 'explanation': 'We need 3 states: q0 (initial state), q1 (have seen a 0), and q2 (have seen "01", the accepting state).'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Context-Free Grammars', 'text': r'Which of the following production rules violates the standard definition of Chomsky Normal Form (CNF)?', 'options': [r'$A \to BC$', r'$A \to a$', r'$A \to \epsilon$', r'$B \to CD$'], 'answer': 'C', 'explanation': r'CNF rules must be of the form $A \to BC$ or $A \to a$. Epsilon ($\epsilon$) productions are not allowed, except for the starting symbol if it does not appear on the right side of any production.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Turing Machines', 'text': 'Which of the following problems is undecidable?', 'options': ['Does a given DFA accept the empty string?', 'Are two given regular expressions equivalent?', 'Does a given Turing machine halt on a specific input?', 'Is a given context-free language empty?'], 'answer': 'C', 'explanation': 'The Halting Problem, which asks whether a given Turing machine will halt for a given input, is the most famous example of an undecidable problem.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Regular Expressions', 'text': r'The regular expression for the language of all strings over $\{a,b\}$ starting with $a$ and ending with $b$ is:', 'options': [r'$a(a+b)^*b$', r'$a^*b^*$', r'$a(ab)^*b$', r'$(a+b)^*ab$'], 'answer': 'A', 'explanation': r'The expression must start with an "a", followed by any sequence of a\'s and b\'s (represented by $(a+b)^*$), and must end with a "b".'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Context-Free Languages', 'text': r'The language $L = \{a^i b^j c^k \mid i=j \text{ or } j=k, \text{ where } i,j,k \ge 1\}$ is:', 'options': ['Regular', 'Context-free and deterministic', 'Context-free but inherently ambiguous', 'Not context-free'], 'answer': 'C', 'explanation': 'This language is the union of two CFLs, so it is a CFL. However, strings like $a^n b^n c^n$ have two different parse trees (one for the i=j case and one for the j=k case), making the language inherently ambiguous.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Pumping Lemma', 'text': r'To prove that the language $L = \{a^p \mid p \text{ is a prime number}\}$ is not regular, the Pumping Lemma requires you to:', 'options': ['Show that any long string can be pumped', 'Find one long string in L that cannot be pumped', 'Find a string not in L that can be pumped into L', 'Construct a DFA for the language'], 'answer': 'B', 'explanation': 'The Pumping Lemma for regular languages is a proof by contradiction. You assume the language is regular, take a string longer than the pumping length p, and show that by "pumping" a substring, you can generate a new string that is not in the language.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Decidability', 'text': 'Which of the following properties of Context-Free Grammars (CFGs) is decidable?', 'options': ['Is the language generated by a CFG empty?', 'Are two CFGs equivalent?', 'Is the language generated by a CFG regular?', 'Is a given CFG ambiguous?'], 'answer': 'A', 'explanation': 'The emptiness problem for CFGs is decidable. Equivalence, regularity, and ambiguity are all undecidable problems for CFGs.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Closure Properties', 'text': 'The set of regular languages is closed under which of the following operations?', 'options': ['Union', 'Intersection', 'Complementation', 'Concatenation'], 'answer': 'ABCD', 'explanation': 'Regular languages are closed under all of these operations: union, intersection, complementation, concatenation, and Kleene star.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Grammar Types', 'text': 'Which of the following are types in the Chomsky Hierarchy of grammars?', 'options': ['Type-0 (Unrestricted)', 'Type-1 (Context-Sensitive)', 'Type-2 (Context-Free)', 'Type-3 (Regular)'], 'answer': 'ABCD', 'explanation': 'The Chomsky Hierarchy consists of these four types, ordered by their generative power.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Language Classes', 'text': 'Which of the following statements about language classes are true?', 'options': [r'Regular languages $\subset$ Context-Free languages', r'Context-Free languages $\subset$ Context-Sensitive languages', r'Recursive languages $\subset$ Recursively Enumerable languages', 'All are proper subsets'], 'answer': 'ABCD', 'explanation': 'All of these statements represent proper subset relationships in the Chomsky Hierarchy. There are CFLs that are not regular, CSLs that are not CFLs, and RE languages (like the Halting Problem) that are not recursive.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Automata Equivalence', 'text': 'Which of the following models of computation are equivalent in power to a Deterministic Finite Automaton (DFA)?', 'options': ['Nondeterministic Finite Automaton (NFA)', 'Regular Expression', 'Right-Linear Grammar', 'Pushdown Automaton (PDA)'], 'answer': 'ABC', 'explanation': 'DFAs, NFAs, Regular Expressions, and Right/Left-Linear Grammars are all equivalent models for recognizing regular languages. A PDA is more powerful and recognizes context-free languages.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Parse Trees', 'text': 'Properties of a parse tree for a string in a context-free grammar include:', 'options': ['The root node is labeled with the start symbol', 'The leaf nodes are labeled with terminals or epsilon', 'Internal nodes are labeled with non-terminals', 'The sequence of leaves, read left-to-right, forms the derived string'], 'answer': 'ABCD', 'explanation': 'These are all fundamental, definitional properties of a parse tree.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Reducibility', 'text': 'If problem A is reducible to problem B ($A \le_m B$), what can we conclude?', 'options': ['If B is decidable, then A is decidable', 'If A is undecidable, then B is undecidable', 'If B is in NP, then A is in NP (for polynomial time reduction)', 'If A is in P, then B is in P (for polynomial time reduction)'], 'answer': 'ABC', 'explanation': 'Reducibility means A is "no harder than" B. So if B has a solution (decidable, in NP), A must also. If A has no solution (undecidable), B cannot have one either. The reverse of D is true, but D itself is not.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'State Minimization', 'text': r'A DFA has 5 states $\{q_0, q_1, q_2, q_3, q_4\}$, with $q_4$ as the only final state. If states $q_1$ and $q_2$ are found to be indistinguishable, and $q_0$ and $q_3$ are indistinguishable, what is the number of states in the minimized DFA?', 'answer': '3', 'explanation': 'We can merge the indistinguishable states. The new state sets would be $\{q_0, q_3\}$, $\{q_1, q_2\}$, and $\{q_4\}$. This results in a minimized DFA with 3 states.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Regular Language', 'text': r'How many strings of length exactly 3 are in the language defined by the regular expression $(a+b)^*a$?', 'answer': '4', 'explanation': 'We need strings of length 3 ending in "a". The first two characters can be anything. The possibilities are: aaa, aba, baa, bba. There are 4 such strings.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Context-Free Grammar', 'text': r'Consider the grammar $S \to aSb \mid c$. How many non-terminal nodes are in the parse tree for the string "aacbb"?', 'answer': '3', 'explanation': r'The derivation is $S \Rightarrow aSb \Rightarrow aaSbb \Rightarrow aacbb$. The parse tree has a root S, an internal S node, and another internal S node that derives c. This gives 3 non-terminal nodes.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Pushdown Automata', 'text': r'What is the minimum number of states required for a PDA to accept the language $L = \{w c w^R \mid w \in \{a,b\}^*\}$?', 'answer': '2', 'explanation': 'A PDA can do this with two states: a starting state q0 that pushes w onto the stack, and upon reading "c", transitions to a state q1 that pops the stack to match w-reversed.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'NFA Construction', 'text': r'What is the minimum number of states required for an NFA to accept the language corresponding to the regular expression $(a+b)^*abb$?', 'answer': '4', 'explanation': 'We need states to track the suffix we have seen: state q0 (start), q1 (ends in a), q2 (ends in ab), q3 (ends in abb, accepting state). This requires 4 states.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Turing Machine', 'text': r'A standard single-tape Turing Machine can simulate a $k$-tape Turing Machine that runs in $T(n)$ time. What is the time complexity of this simulation on the single-tape TM?', 'answer': 'O(T(n)^2)', 'explanation': 'Simulating k tapes on a single tape requires scanning back and forth across the tape for each step of the k-tape machine. This squaring of the time complexity is a standard result in complexity theory.'}
            ],
            'CD': [
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Parsing', 'text': 'Which type of parser constructs a parse tree using a rightmost derivation in reverse?', 'options': ['LL(1) parser', 'Recursive Descent parser', 'LR parser', 'Top-down parser'], 'answer': 'C', 'explanation': 'LR (Left-to-right scan, Rightmost derivation in reverse) parsers are bottom-up parsers that work by identifying handles and reducing them, effectively tracing a rightmost derivation backwards.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Lexical Analysis', 'text': 'Which phase of the compiler is responsible for converting a sequence of characters into a sequence of tokens?', 'options': ['Lexical Analyzer', 'Syntax Analyzer', 'Semantic Analyzer', 'Code Generator'], 'answer': 'A', 'explanation': 'The lexical analyzer, or scanner, is the first phase of a compiler. It reads the source code and groups characters into meaningful sequences called lexemes, producing tokens.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Grammar Analysis', 'text': 'A grammar that is left-recursive cannot be parsed by which of the following parser types?', 'options': ['LL(1) parser', 'LR(1) parser', 'LALR parser', 'SLR parser'], 'answer': 'A', 'explanation': 'Top-down parsers like LL(1) and recursive descent parsers cannot handle left-recursive grammars because they would enter an infinite loop. LR parsers can handle left-recursive grammars.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Symbol Table', 'text': 'For a compiler, which data structure is most suitable for implementing a symbol table due to its efficient average case lookup time?', 'options': ['Array', 'Linked List', 'Hash Table', 'Stack'], 'answer': 'C', 'explanation': 'A hash table provides an average time complexity of O(1) for search, insertion, and deletion operations, making it ideal for the frequent lookups required for a symbol table.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Code Generation', 'text': 'The three-address code representation for the expression `a = b * c + d` is:', 'options': [r'$t_1 = b * c; a = t_1 + d$', r'$a = b * c + d$', r'$t_1 = b + d; a = t_1 * c$', r'$a = (b, c, *) ; a = (a, d, +)$'], 'answer': 'A', 'explanation': 'Three-address code breaks down complex expressions into a sequence of simple instructions, each having at most one operator on the right side and using temporary variables (like t1) for intermediate results.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Optimization', 'text': 'Peephole optimization is a form of:', 'options': ['Global optimization', 'Loop optimization', 'Local optimization', 'Data-flow analysis'], 'answer': 'C', 'explanation': 'Peephole optimization is a local optimization technique that examines a small, sliding window of target code instructions and replaces them with a shorter or faster sequence.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Error Recovery', 'text': '"Panic mode" error recovery in a parser involves:', 'options': ['Correcting the erroneous token', 'Skipping input tokens until a synchronizing token is found', 'Inserting a missing token', 'Transforming the grammar to be unambiguous'], 'answer': 'B', 'explanation': 'In panic mode recovery, the parser discards input tokens one at a time until a designated synchronizing token (like a semicolon or closing brace) is found, at which point it attempts to resume parsing.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Syntax Directed Translation', 'text': 'An attribute whose value at a parse tree node depends on the attributes of its children is called a(n):', 'options': ['Synthesized attribute', 'Inherited attribute', 'Lexical attribute', 'Terminal attribute'], 'answer': 'A', 'explanation': 'Synthesized attributes are computed from the values of the attributes of the children nodes. They pass information up the parse tree.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Parser Types', 'text': 'Which of the following are considered top-down parsing techniques?', 'options': ['Recursive Descent Parsing', 'LL(1) Parsing', 'LR(1) Parsing', 'Operator Precedence Parsing'], 'answer': 'AB', 'explanation': 'Recursive Descent and LL(k) parsers are top-down parsers that build the parse tree from the root downwards. LR parsers and Operator Precedence parsers are bottom-up.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Compiler Phases', 'text': 'Which of the following phases belong to the "front end" of a typical compiler?', 'options': ['Lexical Analysis', 'Syntax Analysis', 'Semantic Analysis', 'Code Optimization'], 'answer': 'ABC', 'explanation': 'The front end analyzes the source code to build an intermediate representation. It includes lexical, syntax, and semantic analysis. The back end (including optimization and code generation) synthesizes the target code.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'LR Parsing', 'text': 'An LR(1) parser can handle which of the following types of grammars?', 'options': ['All LL(1) grammars', 'Unambiguous grammars', 'Left-recursive grammars', 'All context-free grammars'], 'answer': 'AC', 'explanation': 'LR(1) is more powerful than LL(1) and can parse all LL(1) grammars. It can also handle left-recursion. However, it can only handle unambiguous grammars, so it cannot parse ALL context-free grammars, as some are inherently ambiguous.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Semantic Analysis', 'text': 'Which of the following tasks are typically performed during the semantic analysis phase?', 'options': ['Type checking', 'Scope resolution (e.g., matching variable use to declaration)', 'Building a parse tree', 'Register allocation'], 'answer': 'AB', 'explanation': 'Semantic analysis focuses on the meaning of the program. Type checking and scope resolution are key tasks. Building a parse tree is done in the preceding syntax analysis phase, and register allocation is a back-end task in code generation.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Intermediate Code', 'text': 'Advantages of using an intermediate code representation in a compiler include:', 'options': ['Enabling machine-independent code optimization', 'Facilitating retargeting the compiler to a new machine', 'Simplifying the overall compiler design', 'Faster execution than machine code'], 'answer': 'ABC', 'explanation': 'Intermediate code provides a machine-independent layer for optimization and simplifies porting the compiler. It is an abstraction and is slower to execute than native machine code.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Code Optimization', 'text': 'Which of the following are machine-independent code optimization techniques?', 'options': ['Constant folding', 'Dead code elimination', 'Loop unrolling', 'Instruction scheduling'], 'answer': 'ABC', 'explanation': 'Constant folding, dead code elimination, and loop unrolling are logical optimizations that can be performed on the intermediate code, independent of the target machine. Instruction scheduling is machine-dependent as it relies on the target processor\'s architecture.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'FIRST and FOLLOW', 'text': r'For the grammar $S \to AB, A \to a \mid \epsilon, B \to b$, what is the size of the set FOLLOW(A)?', 'answer': '1', 'explanation': r'$FOLLOW(A)$ is everything in $FIRST(B)$, which is $\{b\}$. Since B cannot derive epsilon, we do not need to consider FOLLOW(S). The size is 1.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Lexical Analysis', 'text': r'How many tokens are generated by the lexical analyzer for the C statement: `int a[10];`?', 'answer': '6', 'explanation': 'The tokens are: `int` (keyword), `a` (identifier), `[` (operator), `10` (literal), `]` (operator), and `;` (terminator). Total is 6 tokens.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'LR Parsing', 'text': r'An LR(0) parser for the grammar $S \to SS \mid a$ will have how many shift-reduce conflicts?', 'answer': '1', 'explanation': 'This grammar is ambiguous. A state containing the item $S \to S \cdot S$ and seeing the terminal "a" will have a shift-reduce conflict, as it can either shift "a" or reduce by $S \to a$.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Parse Tree', 'text': r'For the unambiguous grammar $S \to aSb \mid c$, how many leaf nodes does the parse tree for the string "aacbb" have?', 'answer': '5', 'explanation': 'The parse tree will derive the string "aacbb". The leaves of the tree spell out the derived string. Since the string has 5 characters (terminals), the parse tree has 5 leaf nodes.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Symbol Table', 'text': r'A hash table of size 7 uses the hash function h(key) = key mod 7. With linear probing, how many collisions occur when inserting the keys 10, 22, and 31 in that order?', 'answer': '1', 'explanation': '1. Insert 10: h(10) = 3. No collision. 2. Insert 22: h(22) = 1. No collision. 3. Insert 31: h(31) = 3. Slot 3 is occupied by 10. This is 1 collision.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Code Generation', 'text': r'For the expression `(a+b)*(c+d)`, what is the minimum number of temporary variables required to generate three-address code?', 'answer': '2', 'explanation': r'We need one temporary to hold the result of the first subexpression while the second is computed. $t_1 = a + b; t_2 = c + d; result = t_1 * t_2$. Minimum temporaries needed is 2.'}
            ],
            'OS': [
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Processes', 'text': 'In Unix-like operating systems, which system call is used to create a new process by duplicating the calling process?', 'options': ['exec()', 'fork()', 'wait()', 'exit()'], 'answer': 'B', 'explanation': 'The `fork()` system call creates a new process, called the child process, which is an exact duplicate of the parent process.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Scheduling', 'text': 'Which CPU scheduling algorithm is optimal in terms of minimizing the average waiting time for a given set of processes?', 'options': ['First-Come, First-Served (FCFS)', 'Shortest Job First (SJF)', 'Round Robin', 'Priority Scheduling'], 'answer': 'B', 'explanation': 'SJF is provably optimal for minimizing average waiting time. However, it requires knowledge of the future (CPU burst times), making it impossible to implement in practice.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Deadlocks', 'text': "The Banker's Algorithm is an example of a technique for:", 'options': ['Deadlock detection', 'Deadlock prevention', 'Deadlock avoidance', 'Deadlock recovery'], 'answer': 'C', 'explanation': "The Banker's Algorithm is a classic deadlock avoidance technique. It checks if granting a resource request would lead to an unsafe state before allocating the resource."},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Memory Management', 'text': "Which page replacement algorithm can suffer from Belady's anomaly?", 'options': ['LRU (Least Recently Used)', 'FIFO (First-In, First-Out)', 'Optimal Page Replacement', 'LFU (Least Frequently Used)'], 'answer': 'B', 'explanation': "Belady's anomaly is the phenomenon where increasing the number of page frames results in an increase in page faults. FIFO is the most common algorithm that exhibits this behavior."},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'File Systems', 'text': 'Which file allocation method is most prone to external fragmentation?', 'options': ['Contiguous Allocation', 'Linked Allocation', 'Indexed Allocation', 'FAT'], 'answer': 'A', 'explanation': 'Contiguous allocation requires finding a contiguous block of disk space for each file. Over time, as files are created and deleted, the free space gets broken into small, non-contiguous chunks (external fragmentation).'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Synchronization', 'text': "Peterson's solution for the critical section problem is a software-based solution that relies on the assumption of:", 'options': ['Atomic load and store instructions', 'A hardware Test-and-Set instruction', 'The availability of semaphores', 'The availability of monitors'], 'answer': 'A', 'explanation': "Peterson's algorithm works correctly only if individual machine-level load and store operations are atomic (indivisible)."},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Virtual Memory', 'text': 'A state where a process is spending more time paging than executing is known as:', 'options': ['Starvation', 'Thrashing', 'Deadlock', 'Fragmentation'], 'answer': 'B', 'explanation': 'Thrashing occurs when a system has a high page fault rate, leading to constant swapping of pages between disk and memory. The CPU spends most of its time on paging I/O instead of useful computation.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'I/O Systems', 'text': 'Which I/O method typically results in the highest CPU overhead for transferring a block of data?', 'options': ['Programmed I/O (PIO)', 'Interrupt-driven I/O', 'Direct Memory Access (DMA)', 'Channel I/O'], 'answer': 'A', 'explanation': 'In Programmed I/O, the CPU is fully occupied with polling the device and transferring data word by word, leading to high overhead.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Process States', 'text': 'Which of the following represent valid transitions in a standard process state model?', 'options': ['Ready -> Running', 'Running -> Blocked (Waiting)', 'Blocked (Waiting) -> Ready', 'Running -> Ready'], 'answer': 'ABCD', 'explanation': 'Ready to Running: Scheduler dispatches process. Running to Blocked: Process waits for I/O. Blocked to Ready: I/O completes. Running to Ready: Preemption by scheduler (e.g., time slice ends). All are valid.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Deadlock Conditions', 'text': "The four necessary and sufficient conditions for a deadlock to occur are:", 'options': ['Mutual Exclusion', 'Hold and Wait', 'No Preemption', 'Circular Wait'], 'answer': 'ABCD', 'explanation': "These four, known as the Coffman conditions, must all hold simultaneously for a deadlock to arise."},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Memory Allocation', 'text': 'Which of the following are dynamic storage allocation algorithms for main memory?', 'options': ['First Fit', 'Best Fit', 'Worst Fit', 'Paging'], 'answer': 'ABC', 'explanation': 'First Fit, Best Fit, and Worst Fit are algorithms for allocating variable-sized partitions in memory. Paging is a memory management scheme, not a dynamic allocation algorithm in this context.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Scheduling Algorithms', 'text': 'Which of the following CPU scheduling algorithms can be preemptive?', 'options': ['Shortest Job First (SJF)', 'First-Come, First-Served (FCFS)', 'Round Robin', 'Priority Scheduling'], 'answer': 'ACD', 'explanation': 'SJF and Priority scheduling have both preemptive (SRTF, Preemptive Priority) and non-preemptive versions. Round Robin is inherently preemptive. FCFS is strictly non-preemptive.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'File System Components', 'text': 'A file\'s metadata (or inode information) typically includes:', 'options': ["File's size in bytes", "Time of last modification", "Access permissions (read/write/execute)", "File's content"], 'answer': 'ABC', 'explanation': "Metadata is data about the file, not the file's data itself. Size, timestamps, and permissions are classic examples of metadata. The content is the data."},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Synchronization Primitives', 'text': 'Which of the following can be used to provide mutual exclusion in concurrent programming?', 'options': ['Binary Semaphore', 'Mutex Lock', 'Monitor', 'Spinlock'], 'answer': 'ABCD', 'explanation': 'All of these are well-known synchronization primitives used to enforce mutual exclusion and prevent race conditions in critical sections.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Process Scheduling', 'text': 'Consider four processes with CPU burst times [5, 3, 8, 6]. Using non-preemptive SJF scheduling, what is the average waiting time?', 'answer': '6.25', 'explanation': 'SJF will execute jobs in the order of burst times: 3, 5, 6, 8. Waiting times are: 0 (for job with burst 3), 3 (for job with burst 5), 3+5=8 (for job with burst 6), 3+5+6=14 (for job with burst 8). Average waiting time = (0+3+8+14)/4 = 25/4 = 6.25.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Memory Management', 'text': r'In a paged memory system, the page size is 4 KB and the logical address is 20 bits. How many pages are in the logical address space?', 'answer': '256', 'explanation': r'Page size = 4 KB = $2^{12}$ bytes. This means the offset is 12 bits. The number of bits for the page number is 20 - 12 = 8 bits. The number of pages is $2^8 = 256$.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Deadlock Detection', 'text': 'In a system with 3 processes and 2 identical instances of a resource, what is the maximum number of instances each process can request such that a deadlock is guaranteed to be impossible?', 'answer': '1', 'explanation': 'Let m=resources=2, n=processes=3. To avoid deadlock, (Sum of Max Needs) < m+n. If each process needs k, then n*k < m+n => 3k < 2+3 => 3k < 5 => k < 1.66. The max integer value for k is 1. If each process requests a maximum of 1, no deadlock can occur.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Page Replacement', 'text': 'Consider the page reference string [1,2,3,4,1,2,5,1,2,3,4,5] and a system with 3 frames. Using the LRU algorithm, how many page faults will occur?', 'answer': '10', 'explanation': 'Trace: 1(F), 2(F), 3(F), 4(F)->[2,3,4], 1(F)->[3,4,1], 2(F)->[4,1,2], 5(F)->[1,2,5], 1(H), 2(H), 3(F)->[1,2,3], 4(F)->[2,3,4], 5(F)->[3,4,5]. Total faults = 10.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'File Allocation', 'text': r'A file of size 2000 bytes is to be stored on a disk with a block size of 512 bytes. If contiguous allocation is used, how many blocks are needed?', 'answer': '4', 'explanation': r'Number of blocks = $\lceil \text{File Size} / \text{Block Size} \rceil = \lceil 2000 / 512 \rceil = \lceil 3.90625 \rceil = 4$ blocks.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Banker\'s Algorithm', 'text': r'A system has 3 processes and 10 instances of a resource. The maximum needs are [7, 5, 8]. The current allocations are [2, 3, 2]. How many resources are available?', 'answer': '3', 'explanation': 'Total allocated = 2 + 3 + 2 = 7. Total available = Total instances - Total allocated = 10 - 7 = 3.'}
            ],
            'DB': [ # Corrected from DBMS
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Normalization', 'text': 'A relation is in Second Normal Form (2NF) if it is in 1NF and what other condition is met?', 'options': ['It has no transitive dependencies', 'All non-key attributes are fully functionally dependent on the primary key', 'Every determinant is a candidate key', 'It has no multi-valued dependencies'], 'answer': 'B', 'explanation': 'The definition of 2NF is that the relation is in 1NF and there are no partial dependencies of any non-key attribute on any candidate key.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'ER Model', 'text': 'In an Entity-Relationship (ER) diagram, a relationship between two entity sets is represented by a:', 'options': ['Rectangle', 'Diamond', 'Oval', 'Double rectangle'], 'answer': 'B', 'explanation': 'Diamond shapes represent relationships, rectangles represent entity sets, and ovals represent attributes.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Transactions', 'text': 'Which transaction isolation level provides the highest level of consistency and prevents all concurrency phenomena including phantom reads?', 'options': ['READ UNCOMMITTED', 'READ COMMITTED', 'REPEATABLE READ', 'SERIALIZABLE'], 'answer': 'D', 'explanation': 'SERIALIZABLE is the highest isolation level, ensuring that the execution of concurrent transactions is equivalent to some serial execution, thus preventing dirty reads, non-repeatable reads, and phantom reads.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Indexing', 'text': 'In a B+ tree, all the actual data pointers are stored in the:', 'options': ['Root node', 'Internal nodes', 'Leaf nodes', 'All nodes'], 'answer': 'C', 'explanation': 'A key feature of the B+ tree is that all data pointers reside exclusively in the leaf nodes. The leaf nodes are also linked together sequentially to facilitate range queries.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'SQL', 'text': 'Which SQL clause is used to filter the results of a query based on a specified condition?', 'options': ['GROUP BY', 'ORDER BY', 'HAVING', 'WHERE'], 'answer': 'D', 'explanation': 'The WHERE clause is used to filter records before any groupings are made. The HAVING clause is used to filter groups after they have been created by a GROUP BY clause.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Concurrency Control', 'text': 'The Two-Phase Locking (2PL) protocol ensures:', 'options': ['Deadlock freedom', 'Starvation freedom', 'Conflict serializability', 'Recoverability'], 'answer': 'C', 'explanation': 'The primary guarantee of 2PL is that all schedules it allows are conflict serializable. It does not, however, prevent deadlocks.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Query Processing', 'text': 'Which of the following join algorithms is generally most efficient when the relations are large and no useful indexes are available?', 'options': ['Nested Loop Join', 'Hash Join', 'Sort-Merge Join', 'Index Nested Loop Join'], 'answer': 'B', 'explanation': 'Hash Join typically outperforms other join methods for large relations when there are no indexes, as its cost is linear in the size of the relations, O(M+N).'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Database Design', 'text': 'The functional dependency $A \to B$ on a relation scheme R means that:', 'options': ['For any two tuples $t_1, t_2$ in R, if $t_1[A] = t_2[A]$, then $t_1[B] = t_2[B]$', 'For any tuple $t$ in R, $A=B$', 'B must be the primary key', 'A must be the primary key'], 'answer': 'A', 'explanation': 'This is the formal definition of a functional dependency. It means that the value of attribute A uniquely determines the value of attribute B.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'ACID Properties', 'text': 'Which of the following are part of the ACID properties of a database transaction?', 'options': ['Atomicity', 'Consistency', 'Isolation', 'Durability'], 'answer': 'ABCD', 'explanation': 'ACID is an acronym for Atomicity, Consistency, Isolation, and Durability, which are the four fundamental properties that guarantee reliable transaction processing.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'SQL Operations', 'text': 'Which of the following are aggregate functions in SQL?', 'options': ['COUNT', 'AVG', 'CONCAT', 'MAX'], 'answer': 'ABD', 'explanation': 'COUNT, AVG, and MAX are aggregate functions that operate on a set of rows to return a single summary value. CONCAT is a string manipulation function.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Normal Forms', 'text': 'A relation that is in Boyce-Codd Normal Form (BCNF) is also guaranteed to be in:', 'options': ['First Normal Form (1NF)', 'Second Normal Form (2NF)', 'Third Normal Form (3NF)', 'Fourth Normal Form (4NF)'], 'answer': 'ABC', 'explanation': 'The normal forms are hierarchical. If a relation is in BCNF, it must also be in 3NF, 2NF, and 1NF. It is not, however, guaranteed to be in 4NF.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Recovery Techniques', 'text': 'Which of the following are valid log-based database recovery techniques?', 'options': ['Immediate Update', 'Deferred Update', 'Shadow Paging', 'Checkpointing'], 'answer': 'ABD', 'explanation': 'Immediate and Deferred update are log-based techniques. Checkpointing is a mechanism used with logging to improve recovery efficiency. Shadow paging is a recovery technique but it does not use a log file.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Relational Algebra', 'text': 'Which of the following are binary operations in relational algebra (i.e., they take two relations as input)?', 'options': ['Union ($\cup$)', 'Selection ($\sigma$)', 'Join ($\Join$)', 'Intersection ($\cap$)'], 'answer': 'ACD', 'explanation': 'Union, Join, and Intersection are binary operators. Selection and Projection are unary operators.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Distributed Databases', 'text': 'Major challenges that need to be addressed in a distributed database system include:', 'options': ['Distributed query processing and optimization', 'Distributed concurrency control', 'Handling network partitions and site failures', 'Maintaining data replication and consistency'], 'answer': 'ABCD', 'explanation': 'All of these are fundamental and significant challenges in the design and management of distributed database systems.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Functional Dependencies', 'text': r'For a relation R(A,B,C,D) with functional dependencies {A $\to$ B, B $\to$ C, C $\to$ D}, how many candidate keys does the relation have?', 'answer': '1', 'explanation': r'We can find the closure of A: $A^+ = \{A, B, C, D\}$. Since A determines all other attributes, A is a candidate key. No other single attribute or combination is a minimal superkey. Thus, there is only one candidate key: {A}.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'SQL Query', 'text': 'A table `Students` has 100 rows. The query `SELECT COUNT(*) FROM Students WHERE grade = \'A\';` returns 25. How many rows do NOT have the grade \'A\' (assuming no NULL grades)?', 'answer': '75', 'explanation': 'If 25 students have grade A, then the remaining students do not. Total rows - rows with grade A = 100 - 25 = 75.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'B+ Tree', 'text': r'In a B+ tree where the order (maximum number of children) is 5, what is the minimum number of keys an internal (non-root) node can have?', 'answer': '2', 'explanation': r'For a B+ tree of order $m$, an internal node must have between $\lceil m/2 \rceil$ and $m$ children. The number of keys is one less. So, minimum keys = $\lceil 5/2 \rceil - 1 = 3 - 1 = 2$.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Transaction Schedule', 'text': r'How many conflicting pairs of operations are there in the schedule S: $T_1:R(A), T_2:W(A), T_1:W(A), T_2:R(B)$?', 'answer': '2', 'explanation': r'A conflict occurs between two transactions on the same data item if at least one is a write. Conflicts are: ($T_1:R(A), T_2:W(A)$) and ($T_2:W(A), T_1:W(A)$). The operations on B are not conflicting. There are 2 conflicts.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Relational Model', 'text': 'A relation (table) has 5 attributes (columns) and 20 tuples (rows). How many cells does this relation contain?', 'answer': '100', 'explanation': 'The total number of cells is the number of attributes multiplied by the number of tuples: 5 * 20 = 100.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Joins', 'text': r'A natural join is performed on relations R(A,B) with 100 tuples and S(B,C) with 200 tuples. If every tuple in R joins with exactly 2 tuples in S, how many tuples are in the result?', 'answer': '200', 'explanation': 'Since each of the 100 tuples in R joins with 2 tuples in S, the total number of tuples in the resulting relation is 100 * 2 = 200.'}
            ],
            'CN': [
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'TCP/IP Model', 'text': 'Which layer of the TCP/IP model is responsible for logical addressing and routing?', 'options': ['Application Layer', 'Transport Layer', 'Internet Layer', 'Network Interface Layer'], 'answer': 'C', 'explanation': 'The Internet Layer (equivalent to the OSI Network Layer) is responsible for IP addressing, packet routing, and path determination.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Routing', 'text': 'The "count-to-infinity" problem is associated with which type of routing algorithm?', 'options': ['Link-State Routing', 'Distance-Vector Routing', 'Hierarchical Routing', 'Source Routing'], 'answer': 'B', 'explanation': 'Distance-Vector routing algorithms, like RIP, are susceptible to the count-to-infinity problem, where nodes take a long time to converge after a link failure, creating temporary routing loops.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'TCP Congestion Control', 'text': 'In the TCP Reno congestion control algorithm, what happens to the congestion window (cwnd) after three duplicate ACKs are received?', 'options': ['It is reset to 1 MSS (Slow Start)', 'It is halved (Fast Recovery)', 'It is increased by 1 MSS', 'It remains unchanged'], 'answer': 'B', 'explanation': 'TCP Reno interprets three duplicate ACKs as a sign of mild congestion. It performs a "fast retransmit" and enters "fast recovery", halving the cwnd (multiplicative decrease) instead of resetting it to 1 like it would on a timeout.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Error Detection', 'text': 'Which error detection method can detect all single-bit errors and all burst errors of length less than or equal to the degree of the generator polynomial?', 'options': ['Parity Check', 'Checksum', 'Cyclic Redundancy Check (CRC)', 'Hamming Code'], 'answer': 'C', 'explanation': 'CRC has strong error detection capabilities based on the choice of its generator polynomial, including guaranteed detection of single-bit errors and burst errors up to a certain length.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Application Layer', 'text': 'The Hypertext Transfer Protocol (HTTP) uses which well-known TCP port number by default?', 'options': ['21', '25', '53', '80'], 'answer': 'D', 'explanation': 'HTTP servers listen on port 80 by default. Other ports are FTP (21), SMTP (25), and DNS (53).'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'IP Addressing', 'text': r'How many usable host addresses are available per subnet for the IP address block 192.168.0.0/21?', 'options': ['2046', '2048', '1024', '1022'], 'answer': 'A', 'explanation': r'A /21 mask leaves 32 - 21 = 11 bits for the host portion. This gives $2^{11} = 2048$ total addresses. Two addresses are reserved (the network address and the broadcast address), leaving $2048 - 2 = 2046$ usable host addresses.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Data Link Layer', 'text': r'The efficiency of the Stop-and-Wait ARQ protocol is significantly affected by the parameter $a$, which is the ratio of:', 'options': ['Frame size to bandwidth', 'Propagation delay to transmission time', 'Bandwidth to propagation delay', 'Transmission time to RTT'], 'answer': 'B', 'explanation': r'The efficiency is given by $1 / (1 + 2a)$, where $a = \text{Propagation Delay} / \text{Transmission Time}$. A large value of $a$ (long delay or fast transmission) leads to low efficiency.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Network Security', 'text': 'Which protocol is used to provide a secure, encrypted communication channel for web traffic?', 'options': ['HTTP', 'HTTPS', 'FTP', 'SMTP'], 'answer': 'B', 'explanation': 'HTTPS (HTTP Secure) uses TLS/SSL to encrypt the communication between the web browser and the server, providing confidentiality and integrity.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'OSI Model', 'text': 'Which of the following are primary functions of the Network Layer (Layer 3) in the OSI model?', 'options': ['Routing packets across networks', 'Logical addressing (e.g., IP addresses)', 'Path determination', 'Error detection for bits'], 'answer': 'ABC', 'explanation': 'The Network Layer handles routing, logical addressing, and path determination. Error detection for bits (framing) is a function of the Data Link Layer (Layer 2).'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Protocol Classification', 'text': 'Which of the following application layer protocols typically use TCP as their transport protocol?', 'options': ['HTTP', 'FTP', 'SMTP', 'DNS'], 'answer': 'ABC', 'explanation': 'HTTP, FTP, and SMTP require reliable, connection-oriented service and thus use TCP. DNS primarily uses UDP for fast queries, but can use TCP for large responses (e.g., zone transfers).'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Routing Algorithms', 'text': 'Link-state routing protocols, such as OSPF, have which of the following characteristics?', 'options': ['Each router maintains a complete map of the network topology', "They use Dijkstra's algorithm to calculate shortest paths", 'They typically converge faster than distance-vector protocols', 'They broadcast their entire routing table to neighbors periodically'], 'answer': 'ABC', 'explanation': 'Link-state protocols build a full topology map and use Dijkstra for path calculation, leading to fast convergence. They broadcast link status updates, not their entire routing table like distance-vector protocols.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Flow Control', 'text': 'Which of the following are sliding window protocols used for flow control?', 'options': ['Stop-and-Wait', 'Go-Back-N', 'Selective Repeat', 'Token Ring'], 'answer': 'ABC', 'explanation': 'Go-Back-N and Selective Repeat are standard sliding window protocols. Stop-and-Wait can be considered a sliding window protocol with a window size of 1. Token Ring is a MAC protocol for medium access, not flow control.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Network Devices', 'text': 'Which of these network devices operate primarily at the Physical Layer (Layer 1) of the OSI model?', 'options': ['Hub', 'Repeater', 'Bridge', 'Switch'], 'answer': 'AB', 'explanation': 'Hubs and repeaters are Layer 1 devices that simply regenerate and forward electrical signals without inspecting the data. Bridges and switches operate at Layer 2 (Data Link Layer).'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Quality of Service', 'text': 'Which of the following are considered key Quality of Service (QoS) metrics in a network?', 'options': ['Bandwidth (Throughput)', 'Latency (Delay)', 'Jitter (Variation in delay)', 'Packet Loss Rate'], 'answer': 'ABCD', 'explanation': 'These four metrics are the primary indicators of network performance and are crucial for applications like VoIP and video streaming.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Subnetting', 'text': 'An IP address block 192.168.1.0/24 is divided into 4 equal subnets. What is the CIDR notation of the new subnet mask?', 'answer': '/26', 'explanation': r'To create 4 subnets, we need to borrow $\log_2(4) = 2$ bits from the host portion. The original mask is /24. The new mask will be /24+2 = /26.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Frame Transmission', 'text': r'What is the transmission time in milliseconds (ms) for a frame of size 1000 bits on a 1 Mbps link?', 'answer': '1', 'explanation': r'Transmission Time = Frame Size / Bandwidth = 1000 bits / (1 * $10^6$ bits/sec) = 0.001 seconds = 1 ms.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'TCP Window', 'text': r'A TCP connection has a Round-Trip Time (RTT) of 100 ms and is on a path with a bandwidth of 1 Mbps. To fully utilize the link, what should the optimal window size be in Kilobytes (KB)? (1 KB = 1024 Bytes)', 'answer': '12.2', 'explanation': r'Bandwidth-Delay Product = Bandwidth * RTT = (1 * $10^6$ bps) * (0.1 s) = 100,000 bits. To convert to KB: 100,000 bits / 8 bits/byte / 1024 bytes/KB $\approx$ 12.2 KB.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Hamming Code', 'text': 'For a data message of 4 bits, what is the minimum number of parity bits required for a Hamming code that can correct a single-bit error?', 'answer': '3', 'explanation': r'The formula is $2^p \ge m + p + 1$, where p is parity bits and m is data bits. For m=4, we need $2^p \ge 4 + p + 1$. For p=3, $2^3 \ge 4+3+1 \Rightarrow 8 \ge 8$. So, 3 parity bits are needed.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Network Topology', 'text': 'In a star topology with 1 central hub and 10 computers connected to it, how many physical links are required?', 'answer': '10', 'explanation': 'In a star topology, each device connects directly to the central hub. With 10 computers, there are 10 links.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Sliding Window', 'text': 'In a Go-Back-N ARQ protocol, the sender has a window size of 7. If frame 3 is lost, and the sender receives ACKs up to frame 2, how many frames will the sender retransmit in total (assuming the window was full)?', 'answer': '7', 'explanation': 'If the sender has sent frames [3, 4, 5, 6, 7, 8, 9] and frame 3 is lost, the receiver will keep sending ACK2. When the timer for frame 3 expires, the sender goes back to frame 3 and retransmits all 7 frames in its window: 3, 4, 5, 6, 7, 8, and 9.'}
            ],
            'GA': [
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Numerical Ability', 'text': 'If 25% of a number is 15, what is the number?', 'options': ['45', '60', '75', '90'], 'answer': 'B', 'explanation': 'Let the number be x. 0.25 * x = 15. So, x = 15 / 0.25 = 15 * 4 = 60.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Ratio and Proportion', 'text': "The ratio of the ages of two persons A and B is 3:4. If A's age is 15 years, what is B's age?", 'options': ['18 years', '20 years', '22 years', '24 years'], 'answer': 'B', 'explanation': 'Let the ages be 3x and 4x. Given 3x = 15, so x = 5. B\'s age is 4x = 4 * 5 = 20 years.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Time and Work', 'text': 'A can complete a piece of work in 12 days, and B can complete it in 15 days. If they work together, in how many days will they complete the work?', 'options': ['6.67 days', '7.5 days', '9 days', '5.45 days'], 'answer': 'A', 'explanation': r"A's one-day work = 1/12. B's one-day work = 1/15. Together, their one-day work = $1/12 + 1/15 = (5+4)/60 = 9/60 = 3/20$. So, they will complete the work in $20/3 \approx 6.67$ days."},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Profit and Loss', 'text': 'An item is bought for Rs. 400 and sold for Rs. 500. What is the profit percentage?', 'options': ['20%', '25%', '30%', '35%'], 'answer': 'B', 'explanation': 'Profit = Selling Price - Cost Price = 500 - 400 = 100. Profit % = (Profit / Cost Price) * 100 = (100 / 400) * 100 = 25%.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Simple Interest', 'text': 'What is the simple interest on a principal of Rs. 1000 at a rate of 5% per annum for 3 years?', 'options': ['Rs. 150', 'Rs. 200', 'Rs. 250', 'Rs. 300'], 'answer': 'A', 'explanation': 'Simple Interest (SI) = (P * R * T) / 100 = (1000 * 5 * 3) / 100 = 150.'},
                {'type': 'MCQ', 'difficulty': 3, 'topic': 'Speed and Distance', 'text': 'A car travels 240 km in 4 hours and then another 160 km in 2 hours. What is the average speed of the car for the entire journey?', 'options': ['60 km/h', '66.67 km/h', '70 km/h', '80 km/h'], 'answer': 'B', 'explanation': 'Total Distance = 240 + 160 = 400 km. Total Time = 4 + 2 = 6 hours. Average Speed = Total Distance / Total Time = 400 / 6 = 66.67 km/h.'},
                {'type': 'MCQ', 'difficulty': 2, 'topic': 'Probability', 'text': 'When two fair six-sided dice are thrown, what is the probability that the sum of the outcomes is 7?', 'options': ['1/6', '1/9', '5/36', '7/36'], 'answer': 'A', 'explanation': 'Total possible outcomes = 6 * 6 = 36. Favorable outcomes for a sum of 7 are (1,6), (2,5), (3,4), (4,3), (5,2), (6,1), which is 6 outcomes. Probability = 6 / 36 = 1/6.'},
                {'type': 'MCQ', 'difficulty': 1, 'topic': 'Logical Reasoning', 'text': 'If all cats are animals, and some animals are pets, what can be concluded?', 'options': ['All cats are pets', 'Some cats are pets', 'No cats are pets', 'No definite conclusion can be drawn about cats and pets'], 'answer': 'D', 'explanation': 'The set of cats is a subset of animals. The set of pets has a non-empty intersection with animals. This does not guarantee any intersection between the set of cats and the set of pets.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Data Interpretation', 'text': 'A pie chart shows a country\'s budget allocation: Education 30%, Defense 25%, Health 20%, Infrastructure 15%, Others 10%. Which statements are correct?', 'options': ['Education receives the highest allocation', 'Defense receives more than Health', 'Health and Infrastructure combined receive the same as Education', 'Defense and Health combined are 45% of the budget'], 'answer': 'ABD', 'explanation': 'A: 30% is highest. B: 25% > 20%. C: Health+Infra = 20+15=35%, which is not the same as Education (30%). D: Defense+Health = 25+20=45%. Correct.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Number System', 'text': 'Which of the following numbers are prime?', 'options': ['17', '21', '23', '27'], 'answer': 'AC', 'explanation': '17 and 23 are prime numbers as they are only divisible by 1 and themselves. 21 = 3 * 7 and 27 = 3 * 9.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Geometry', 'text': 'For a right-angled triangle with side lengths 3, 4, and 5, which of the following statements are true?', 'options': ['Its area is 6 square units', 'Its perimeter is 12 units', 'The hypotenuse is the side with length 5', 'It satisfies the Pythagorean theorem'], 'answer': 'ABCD', 'explanation': r'Area = (1/2) * base * height = (1/2)*3*4=6. Perimeter = 3+4+5=12. Hypotenuse is the longest side, 5. Pythagorean theorem: $3^2 + 4^2 = 9 + 16 = 25 = 5^2$. All statements are true.'},
                {'type': 'MSQ', 'difficulty': 2, 'topic': 'Verbal Ability', 'text': 'Which of the following words are synonyms for "ambiguous"?', 'options': ['Unclear', 'Definite', 'Vague', 'Precise'], 'answer': 'AC', 'explanation': 'Ambiguous means unclear, open to more than one interpretation, or vague. Definite and precise are antonyms.'},
                {'type': 'MSQ', 'difficulty': 1, 'topic': 'Series and Sequences', 'text': 'For the arithmetic progression 2, 5, 8, 11, ..., which of the following statements are correct?', 'options': ['The common difference is 3', 'The first term is 2', 'The 5th term is 14', 'The 10th term is 29'], 'answer': 'ABCD', 'explanation': r'Common difference d=3. First term a=2. 5th term $a_5 = a + 4d = 2 + 4*3 = 14$. 10th term $a_{10} = a + 9d = 2 + 9*3 = 29$. All are correct.'},
                {'type': 'MSQ', 'difficulty': 3, 'topic': 'Coding and Decoding', 'text': 'If "COMPUTER" is coded as "XLNKGVI", which statements describe the coding pattern?', 'options': ['It is a substitution cipher', 'It is a Caesar cipher with a fixed shift', 'Each letter is replaced by its counterpart in the reversed alphabet (Atbash cipher)', 'The pattern is inconsistent'], 'answer': 'AC', 'explanation': 'This is an Atbash cipher, a type of substitution cipher where A becomes Z, B becomes Y, etc. C is the 3rd letter from start, X is 3rd from end. O is 15th from start, L is 15th from end, and so on.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Compound Interest', 'text': 'What is the final amount if a principal of Rs. 5000 is invested at 10% per annum compound interest for 2 years?', 'answer': '6050', 'explanation': r'Amount = $P(1 + r/100)^t = 5000(1 + 10/100)^2 = 5000(1.1)^2 = 5000 * 1.21 = 6050$.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Average', 'text': 'The average of the numbers 10, 20, 30, and 40 is:', 'answer': '25', 'explanation': 'Average = (10 + 20 + 30 + 40) / 4 = 100 / 4 = 25.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Permutation and Combination', 'text': 'How many distinct ways can the letters of the word "ENGINEERING" be arranged?', 'answer': '277200', 'explanation': r'The word has 11 letters. E appears 3 times, N appears 3 times, G appears 2 times, I appears 2 times. Total arrangements = $11! / (3! \cdot 3! \cdot 2! \cdot 2!) = 39916800 / (6 \cdot 6 \cdot 2 \cdot 2) = 277200$.'},
                {'type': 'NAT', 'difficulty': 2, 'topic': 'Mensuration', 'text': 'A rectangle has a length of 12 cm and a width of 5 cm. What is the length of its diagonal in cm?', 'answer': '13', 'explanation': r'Using the Pythagorean theorem, Diagonal = $\sqrt{\text{length}^2 + \text{width}^2} = \sqrt{12^2 + 5^2} = \sqrt{144 + 25} = \sqrt{169} = 13$ cm.'},
                {'type': 'NAT', 'difficulty': 1, 'topic': 'Percentage', 'text': 'In a class of 50 students, 30 are boys. What is the percentage of girls in the class?', 'answer': '40', 'explanation': 'Number of girls = 50 - 30 = 20. Percentage of girls = (Number of girls / Total students) * 100 = (20 / 50) * 100 = 40%.'},
                {'type': 'NAT', 'difficulty': 3, 'topic': 'Logical Reasoning', 'text': 'A two-digit number is such that the sum of its digits is 9. If the digits are reversed, the new number is 27 greater than the original number. What is the original number?', 'answer': '36', 'explanation': 'Let the number be 10a+b. Given: a+b=9. Also, (10b+a) - (10a+b) = 27 => 9b - 9a = 27 => b - a = 3. Solving a+b=9 and b-a=3 gives b=6, a=3. The number is 36.'}
            ]
        }


        # --- SCRIPT LOGIC ---
        questions_to_create = []
        difficulty_map = {1: 'EASY', 2: 'MEDIUM', 3: 'HARD'}

        for subject_key, questions in gate_questions.items():
            for q_data in questions:
                marks_for_question = 2 if q_data['type'] == 'MSQ' else 1

                options_dict = {}
                if 'options' in q_data and isinstance(q_data['options'], list):
                    option_letters = ['A', 'B', 'C', 'D']
                    for i, option_text in enumerate(q_data['options']):
                        if i < len(option_letters):
                            options_dict[option_letters[i]] = option_text
                
                question_obj = Question(
                    subject=subject_key,
                    topic=q_data['topic'],
                    difficulty=difficulty_map.get(q_data['difficulty'], 'MEDIUM'),
                    question_type=q_data['type'],
                    question_text=q_data['text'],
                    options=json.dumps(options_dict),
                    correct_answer=str(q_data['answer']),
                    explanation=q_data.get('explanation', ''),
                    marks=marks_for_question
                )
                questions_to_create.append(question_obj)

        # --- DATABASE OPERATION ---
        if questions_to_create:
            with transaction.atomic():
                Question.objects.bulk_create(questions_to_create)
            
            # --- REPORTING ---
            total_created = len(questions_to_create)
            self.stdout.write(self.style.SUCCESS(f'\n✅ Successfully created {total_created} GATE-style questions.'))
            self.stdout.write("-" * 30)

            self.stdout.write("📊 Question Distribution by Subject:")
            subject_names = dict(Question.SUBJECT_CHOICES)
            for subject_key in gate_questions.keys():
                count = sum(1 for q in questions_to_create if q.subject == subject_key)
                if count > 0:
                    self.stdout.write(f"    - {subject_names.get(subject_key)} ({subject_key}): {count} questions")

            self.stdout.write("\n📈 Question Distribution by Type:")
            mcq_count = sum(1 for q in questions_to_create if q.question_type == 'MCQ')
            msq_count = sum(1 for q in questions_to_create if q.question_type == 'MSQ')
            nat_count = sum(1 for q in questions_to_create if q.question_type == 'NAT')
            self.stdout.write(f"    - Multiple Choice (MCQ): {mcq_count}")
            self.stdout.write(f"    - Multiple Select (MSQ): {msq_count}")
            self.stdout.write(f"    - Numerical Answer (NAT): {nat_count}")

            self.stdout.write("\n🎯 Question Distribution by Difficulty:")
            easy_count = sum(1 for q in questions_to_create if q.difficulty == 'EASY')
            medium_count = sum(1 for q in questions_to_create if q.difficulty == 'MEDIUM')
            hard_count = sum(1 for q in questions_to_create if q.difficulty == 'HARD')
            self.stdout.write(f"    - Easy:   {easy_count}")
            self.stdout.write(f"    - Medium: {medium_count}")
            self.stdout.write(f"    - Hard:   {hard_count}")

            self.stdout.write(self.style.SUCCESS("\n✨ Database population complete. Questions are ready for practice!"))
        else:
            self.stdout.write(self.style.WARNING("\nNo questions were processed or created."))